# -*- coding: utf-8 -*-

"""
Django settings for escapegame project.

Generated by 'django-admin startproject' using Django 2.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

from django.utils.translation import gettext_lazy as _

from escapegame import forms

from collections import OrderedDict

import os
import imp
import socket


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Import loggers configuration (need BASE_DIR)
from . import logging

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'l7z2w=efd90^)1gi6a$u$^ohl&tnc=*aby*vr5z5)^-22^voh)'

# Whether we are running on a Raspberry Pi or not
ARCH = ' '.join(os.uname()).strip()
RUNNING_ON_PI = ARCH.endswith('armv7l') or ARCH.endswith('armv6l')
VIDEO_PLAYER = (RUNNING_ON_PI and '/usr/bin/omxplayer' or '/usr/bin/mpv')

# Load python code from file without .py extension
MASTER_FILE = 'master-hostname.txt'
MASTER = imp.load_source(MASTER_FILE, os.path.join(BASE_DIR, MASTER_FILE))

# Whether we are the master game controller
IS_MASTER = (socket.gethostname() == MASTER.HOSTNAME)
IS_SLAVE = not IS_MASTER

# Upload Settings
UPLOAD_IMAGE_PATH = 'uploads/images'
UPLOAD_VIDEO_PATH = 'uploads/videos'
UPLOAD_AUDIO_PATH = 'uploads/audios'
UPLOAD_SKETCH_PATH = 'uploads/sketches'

# Build full hostname by appending master hostname with master TLD
MASTER_HOSTNAME = '%s%s' % (MASTER.HOSTNAME, MASTER.TLD)

# The TLD of the master
MASTER_TLD = MASTER.TLD

# My hostname
HOSTNAME = '%s%s' % (socket.gethostname(), MASTER.TLD)

# The FIFO to use to control the lifts
LIFT_CONTROL_FIFO = '/tmp/lift-control.fifo'

# The FIFO to use to control the video player
VIDEO_CONTROL_FIFO = '/tmp/video-control.fifo'

# The FIFO to use for the video player
VIDEO_PLAYER_FIFO = '/tmp/video-player.fifo'

# Root URL configuration
ROOT_URLCONF = 'siteconfig.urls'

# List of accepted vhosts
ALLOWED_HOSTS = [
	'127.0.0.1',
	'localhost',
	HOSTNAME,
]

# Application definition
INSTALLED_APPS = [
	'escapegame',
	'controllers',
	'jsonexport',
	'multimedia',

	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.messages',
	'django.contrib.sessions',
	'django.contrib.staticfiles',

	'channels',
	'corsheaders',
	'django_extensions',
	'ws4redis',
]

MIDDLEWARE = [
	'django.middleware.locale.LocaleMiddleware',
	'django.middleware.security.SecurityMiddleware',
	'django.contrib.sessions.middleware.SessionMiddleware',
	'corsheaders.middleware.CorsMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [
			os.path.join(BASE_DIR, 'jsonexport', 'templates'),
			os.path.join(BASE_DIR, 'siteconfig', 'templates'),
			os.path.join(BASE_DIR, 'escapegame', 'templates'),
		],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
				'ws4redis.context_processors.default',
			],
			'libraries': {
				'customtags': 'siteconfig.templatetags.customtags',
			},
		},
	},
]

TEMPLATES_CONTEXT_PROCESSOR = [
	'django.template.context_processors.request',
]


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASE_MYSQL = {
	'ENGINE': 'django.db.backends.mysql',
	'NAME': 'escapegame',
	'USER': 'escapegame',
	'PASSWORD': 'escapegame',
	'HOST': MASTER_HOSTNAME,
	'OPTIONS': {
		'init_command': "SET sql_mode='STRICT_TRANS_TABLES'",
	},
}

DATABASES = {
	'default': 	DATABASE_MYSQL,
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
	{
		'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
	},
	{
		'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
	},
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

TIME_ZONE = 'Europe/Paris'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LANG_EN = 'en'
LANG_FR = 'fr'

LANGUAGE_CODE = LANG_FR

LANGUAGES = [
	(LANG_EN, _('English')),
	(LANG_FR, _('French')),
]

prefix_default_language=True


# Path to store locales for internationalization
LOCALE_PATHS = [
	os.path.join(BASE_DIR, 'locale'),
]


# Media files (Uploaded)

MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
MEDIA_URL = '/media/'


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static/')
STATIC_URL = '/static/'

STATICFILES_DIRS = (os.path.join(BASE_DIR, 'siteconfig', 'static'),)


# Websocket URLs
# https://django-websocket-redis.readthedocs.io/en/latest/installation.html#configuration

WEBSOCKET_URL = '/ws/'


# Use Redis as the session engine
# https://django-websocket-redis.readthedocs.io/en/latest/installation.html#replace-memcached-with-redis

REDIS_HOST = MASTER_HOSTNAME
REDIS_PORT = 6379

SESSION_REDIS_PREFIX = 'session'
SESSION_ENGINE = 'redis_sessions.session'
SESSION_REDIS = {
	'host': REDIS_HOST,
	'port': REDIS_PORT,
}


# Channels

CHANNEL_LAYER = {
	"default": {
		"BACKEND": "channels_redis.core.RedisChannelLayer",
		"CONFIG": {
			"hosts": [(REDIS_HOST, REDIS_PORT)],
		},
	},
}


# The following directive is required during development and ignored in production environments.
# It overrides Djangoâ€™s internal main loop and adds a URL dispatcher in front of the request handler.
# https://django-websocket-redis.readthedocs.io/en/latest/installation.html#configuration

WSGI_APPLICATION = 'ws4redis.django_runserver.application'


# WS4Redis

WS4REDIS_CONNECTION = {
	'host': REDIS_HOST,
	'port': REDIS_PORT,
}

# Heart beat for websocket
WS4REDIS_HEARTBEAT = '--heartbeat--'


# CORS settings

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = False

#CORS_ORIGIN_WHITELIST = [
#	'.local',
#]
